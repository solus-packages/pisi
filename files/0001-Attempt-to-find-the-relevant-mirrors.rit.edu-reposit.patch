From 1c724daaf3ef1940bf47eebcb608bdb328b21437 Mon Sep 17 00:00:00 2001
From: Joshua Strobl <joshua@stroblindustries.com>
Date: Tue, 11 Sep 2018 00:46:59 +0300
Subject: [PATCH 1/1] Attempt to find the relevant mirrors.rit.edu repository
 based on packages.solus-project.com. For unstable users of old repo, this
 will automatically add shannon when there are no repos registered.

---
 pisi/api.py       | 19 ++++++++++-----
 pisi/db/repodb.py | 60 +++++++++++++++++++++++++++++++++++++++++++----
 pisi/urlcheck.py  |  9 +++++++
 3 files changed, 77 insertions(+), 11 deletions(-)
 create mode 100644 pisi/urlcheck.py

diff --git a/pisi/api.py b/pisi/api.py
index 7f526f8..24ec323 100644
--- a/pisi/api.py
+++ b/pisi/api.py
@@ -795,13 +795,20 @@ def add_repo(name, indexuri, at = None):
     if not re.match("^[0-9%s\-\\_\\.\s]*$" % str(pisi.util.letters()), name):
         raise pisi.Error(_('Not a valid repo name.'))
     repodb = pisi.db.repodb.RepoDB()
-    if repodb.has_repo(name):
-        raise pisi.Error(_('Repo %s already present.') % name)
-    elif repodb.has_repo_url(indexuri, only_active = False):
-        repo = repodb.get_repo_by_url(indexuri)
-        raise pisi.Error(_('Repo already present with name %s.') % repo)
+
+    new_indexuri = pisi.urlcheck.switch_from_legacy(indexuri)
+
+    if repodb.has_repo_url(new_indexuri, only_active = False):
+        repo = repodb.get_repo_by_url(new_indexuri)
+        raise pisi.Error(_('Repo already present with name %s and same URL.') % repo)
     else:
-        repo = pisi.db.repodb.Repo(pisi.uri.URI(indexuri))
+        if repodb.has_repo(name):
+            repodb.remove_repo(name)
+
+        if new_indexuri != indexuri:
+            ctx.ui.warning("Legacy repo found. Attempting rewrite.")
+
+        repo = pisi.db.repodb.Repo(pisi.uri.URI(new_indexuri))
         repodb.add_repo(name, repo, at = at)
         pisi.db.flush_caches()
         ctx.ui.info(_('Repo %s added to system.') % name)
diff --git a/pisi/db/repodb.py b/pisi/db/repodb.py
index db061db..11f04ff 100644
--- a/pisi/db/repodb.py
+++ b/pisi/db/repodb.py
@@ -23,6 +23,7 @@ import pisi.uri
 import pisi.util
 import pisi.context as ctx
 import pisi.db.lazydb as lazydb
+import pisi.urlcheck
 from pisi.file import File
 
 class RepoError(pisi.Error):
@@ -41,6 +42,7 @@ class RepoOrder:
 
     def __init__(self):
         self._doc = None
+        self.legacy_repo_used = None
         self.repos = self._get_repos()
 
     def add(self, repo_name, repo_url, repo_type="remote"):
@@ -56,6 +58,12 @@ class RepoOrder:
         name_node.insertData(repo_name)
 
         url_node = repo_node.insertTag("Url")
+        old_uri = repo_url
+        repo_url = pisi.urlcheck.switch_from_legacy(repo_url)
+
+        if old_uri != repo_url: 
+            self.legacy_repo_used = True
+
         url_node.insertData(repo_url)
 
         name_node = repo_node.insertTag("Status")
@@ -92,6 +100,24 @@ class RepoOrder:
                         return status
         return "inactive"
 
+    def get_uri(self, repo_name):
+        repo_doc = self._get_doc()
+        url = ""
+
+        for r in repo_doc.tags("Repo"):
+            name = r.getTagData("Name")
+            uri = r.getTagData("Url")
+
+            if name == repo_name:
+                url = pisi.urlcheck.switch_from_legacy(uri)
+
+                if url != uri:
+                    self.legacy_repo_used = True
+
+                break
+
+        return url.rstrip()
+
     def remove(self, repo_name):
         repo_doc = self._get_doc()
 
@@ -135,6 +161,8 @@ class RepoOrder:
             media = r.getTagData("Media")
             name = r.getTagData("Name")
             status = r.getTagData("Status")
+            old_url = r.getTagData("Url")
+            url = pisi.urlcheck.switch_from_legacy(old_url)
             order.setdefault(media, []).append(name)
 
         return order
@@ -144,6 +172,11 @@ class RepoDB(lazydb.LazyDB):
     def init(self):
         self.repoorder = RepoOrder()
 
+        if len(self.repoorder.repos) == 0:
+            repo = pisi.db.repodb.Repo(pisi.uri.URI("https://mirrors.rit.edu/solus/packages/shannon/eopkg-index.xml.xz"))
+            ctx.ui.warning("No repository found. Automatically adding Solus stable.")
+            self.add_repo("Solus", repo, ctx.get_option('at'))
+
     def has_repo(self, name):
         return name in self.list_repos(only_active=False)
 
@@ -176,15 +209,32 @@ class RepoDB(lazydb.LazyDB):
     def get_repo(self, repo):
         return Repo(pisi.uri.URI(self.get_repo_url(repo)))
 
-    #FIXME: this method is a quick hack around repo_info.indexuri.get_uri()
     def get_repo_url(self, repo):
-        urifile_path = pisi.util.join_path(ctx.config.index_dir(), repo, "uri")
-        uri = open(urifile_path, "r").read()
-        return uri.rstrip()
+        url = self.repoorder.get_uri(repo)
+
+        if self.repoorder.legacy_repo_used:
+            repo_doc = self.repoorder._get_doc()
+
+            for r in repo_doc.tags("Repo"):
+                name = r.getTagData("Name")
+                old_url = r.getTagData("Url")
+                url = pisi.urlcheck.switch_from_legacy(old_url)
+
+                if old_url != url:
+                    self.remove_repo(name)
+                    repo = pisi.db.repodb.Repo(pisi.uri.URI(url))
+                    self.add_repo(name, repo, ctx.get_option('at'))
+
+        return url
 
     def add_repo(self, name, repo_info, at = None):
         repo_path = pisi.util.join_path(ctx.config.index_dir(), name)
-        os.makedirs(repo_path)
+
+        try:
+            os.makedirs(repo_path)
+        except Exception, e:
+               pass
+
         urifile_path = pisi.util.join_path(ctx.config.index_dir(), name, "uri")
         open(urifile_path, "w").write(repo_info.indexuri.get_uri())
         self.repoorder.add(name, repo_info.indexuri.get_uri())
diff --git a/pisi/urlcheck.py b/pisi/urlcheck.py
new file mode 100644
index 0000000..9d133dc
--- /dev/null
+++ b/pisi/urlcheck.py
@@ -0,0 +1,9 @@
+import pisi.context as ctx
+
+def switch_from_legacy(repo_url):
+    if repo_url == "https://packages.solus-project.com/shannon/eopkg-index.xml.xz":
+        repo_url = "https://mirrors.rit.edu/solus/packages/shannon/eopkg-index.xml.xz"
+    elif repo_url == "https://packages.solus-project.com/unstable/eopkg-index.xml.xz":
+        repo_url = "https://mirrors.rit.edu/solus/packages/unstable/eopkg-index.xml.xz"
+
+    return repo_url
-- 
2.18.0

