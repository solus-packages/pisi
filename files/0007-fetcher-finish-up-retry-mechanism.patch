From 7812a28cd6df0339b878b5c27d20c6f2b8f76bb3 Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Sun, 13 Feb 2022 01:03:08 +0000
Subject: [PATCH 7/7] fetcher: finish up retry mechanism

* Always return an int from get_retry_attempts
* Use ctx.ui.warning to print timeout warning
* Fix off by one error when retrying
---
 pisi/fetcher.py | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/pisi/fetcher.py b/pisi/fetcher.py
index fb03bb8..d4d17f0 100644
--- a/pisi/fetcher.py
+++ b/pisi/fetcher.py
@@ -137,7 +137,7 @@ class Fetcher:
         attempt = 0
         success = False
 
-        while success is False and attempt < self._get_retry_attempts():
+        while success is False and attempt < self._get_retry_attempts() + 1:
             try:
                 fetch_handler = FetchHandler(self.url, self.partial_file, self._get_bandwidth_limit())
 
@@ -182,10 +182,10 @@ class Fetcher:
             # WARNING : Solus specific workaround for RIT mirror issue.
             except ssl.SSLError as e:
                 attempt += 1
-                print FetchError(_('\n Timed out fetching file, retrying %d out of %d "%s": %s') % (attempt, self._get_retry_attempts(), self.url.get_uri(), e))
-                if attempt == self._get_retry_attempts():
+                if attempt == self._get_retry_attempts() + 1:
                     raise FetchError(_('Hit max retry count when downloading: "%s"') % (self.url.get_uri()))
                 pass
+                ctx.ui.warning(_('\nFailed to fetch file, retrying %d out of %d "%s": %s') % (attempt, self._get_retry_attempts(), self.url.get_uri(), e))
             except urllib2.URLError as e:
                 raise FetchError(_('Could not fetch destination file "%s": %s') % (self.url.get_uri(), e))
 
@@ -234,12 +234,12 @@ class Fetcher:
         retry_attempts = 5
         if ctx.config.options.retry_attempts != retry_attempts:
             retry_attempts = ctx.config.options.retry_attempts
-            return retry_attempts
-        elif ctx.config.values.general.retry_attempts != str(retry_attempts):
+            return int(retry_attempts)
+        elif ctx.config.values.general.retry_attempts != retry_attempts:
             retry_attempts = ctx.config.values.general.retry_attempts
             return int(retry_attempts)
         else:
-            return retry_attempts
+            return int(retry_attempts)
 
     def _test_range_support(self):
         if not os.path.exists(self.partial_file):
-- 
2.35.1

