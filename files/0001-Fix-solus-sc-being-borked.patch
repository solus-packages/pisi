From 6b15dfdacf2649163c30bd657cc26ada68b5c14f Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Sun, 13 Feb 2022 11:09:49 +0000
Subject: [PATCH 1/1] Fix solus-sc being borked

We'll just copy the logic directly from get_bandwidth_limit, don't really
understand what's going on here.
---
 pisi/cli/command.py |  2 +-
 pisi/fetcher.py     | 13 +++++--------
 2 files changed, 6 insertions(+), 9 deletions(-)

diff --git a/pisi/cli/command.py b/pisi/cli/command.py
index bc02038..89b27cd 100644
--- a/pisi/cli/command.py
+++ b/pisi/cli/command.py
@@ -102,7 +102,7 @@ class Command(object):
         group.add_option("-p", "--password", action="store")
         group.add_option("-L", "--bandwidth-limit", action="store", default = 0,
                      help = _("Keep bandwidth usage under specified KB's"))
-        group.add_option("-R", "--retry-attempts", action="store", default = 5,
+        group.add_option("-R", "--retry-attempts", action="store", default = 0,
                      help = _("Set the max number of retry attempts in case of connection timeouts"))
         group.add_option("-v", "--verbose", action="store_true",
                      dest="verbose", default=False,
diff --git a/pisi/fetcher.py b/pisi/fetcher.py
index d4d17f0..2219a1f 100644
--- a/pisi/fetcher.py
+++ b/pisi/fetcher.py
@@ -184,8 +184,8 @@ class Fetcher:
                 attempt += 1
                 if attempt == self._get_retry_attempts() + 1:
                     raise FetchError(_('Hit max retry count when downloading: "%s"') % (self.url.get_uri()))
-                pass
                 ctx.ui.warning(_('\nFailed to fetch file, retrying %d out of %d "%s": %s') % (attempt, self._get_retry_attempts(), self.url.get_uri(), e))
+                pass
             except urllib2.URLError as e:
                 raise FetchError(_('Could not fetch destination file "%s": %s') % (self.url.get_uri(), e))
 
@@ -231,15 +231,12 @@ class Fetcher:
             return 0
 
     def _get_retry_attempts(self):
-        retry_attempts = 5
-        if ctx.config.options.retry_attempts != retry_attempts:
-            retry_attempts = ctx.config.options.retry_attempts
-            return int(retry_attempts)
-        elif ctx.config.values.general.retry_attempts != retry_attempts:
-            retry_attempts = ctx.config.values.general.retry_attempts
+        retry_attempts = ctx.config.options.retry_attempts or ctx.config.values.general.retry_attempts
+        if retry_attempts and retry_attempts != "0":
+            ctx.ui.warning(_("retry attempts is %s") % retry_attempts)
             return int(retry_attempts)
         else:
-            return int(retry_attempts)
+            return 5
 
     def _test_range_support(self):
         if not os.path.exists(self.partial_file):
-- 
2.35.1

