From 272483a6f4fedbfaea6b819b7b847220587a836c Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey.doherty@gmail.com>
Date: Tue, 8 Jul 2014 19:38:20 +0100
Subject: [PATCH 1/3] build: Ensure we set automatic dependency minimum release
 number

Given that our automatic dependencies are either binary or pkgconfig, we
need to ensure that upgrades are done in a sensible fashion. For binary
dependencies we'll now set the releaseFrom to be that of the release number
of the package we built against.

This greatly helps in mass-updates that are co-dependent, ensuring that
when required, an entire "section" (packages and their dependencies) are
updated to the correct release.
---
 pisi/operations/build.py | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/pisi/operations/build.py b/pisi/operations/build.py
index 26bd037..cf284ab 100644
--- a/pisi/operations/build.py
+++ b/pisi/operations/build.py
@@ -1004,6 +1004,7 @@ class Builder:
         # Refresh db's here otherwise we might have out of date information
         # on new installed build dependencies
         self.installdb = pisi.db.installdb.InstallDB()
+        self.packagedb = pisi.db.packagedb.PackageDB()
 
         knownPcFiles = list()
         for fileinfo in self.files.list:
@@ -1055,8 +1056,10 @@ class Builder:
                         if not found and dep not in metadata.package.packageDependencies:
                             newDep = pisi.dependency.Dependency()
                             newDep.package = dep
+                            pkg = self.packagedb.get_package(dep)
+                            newDep.releaseFrom = pkg.release
                             metadata.package.packageDependencies.append(newDep)
-                            ctx.ui.debug("%s depends on %s" % (metadata.package.name, dep))
+                            ctx.ui.debug("%s depends on %s (>= release %s)" % (metadata.package.name, dep, pkg.release))
 
         # Seems insane iterating again for requirements, but we must ensure we grab
         # all pkgconfig files first! (also this is just a small list of known pc files :)
@@ -1123,8 +1126,9 @@ class Builder:
                 if not found and pkg not in metadata.package.packageDependencies:
                     newDep = pisi.dependency.Dependency()
                     newDep.package = pkg.name
+                    newDep.releaseFrom = pkg.release
                     metadata.package.packageDependencies.append(newDep)
-                    output = "%s also depends on %s" % (metadata.package.name, pkg.name)
+                    output = "%s also depends on %s (>= release %s)" % (metadata.package.name, pkg.name, pkg.release)
                     if cached:
                         output += " [cached]"
                     ctx.ui.debug(output)
-- 
1.8.4

